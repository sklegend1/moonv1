// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

//datasource db {
//  provider = "postgresql"
//  url      = env("DATABASE_URL")
//}

//datasource db {
//  provider = "postgresql"
//  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
//  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
//}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  //directUrl = env("DATABASE_URL_UNPOOLED")
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String    @db.VarChar(255)
  posts     Post[]
}


model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  tags      Tag[]
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  catrgory  Category?  @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  img       String    @default("https://res.cloudinary.com/dh1hxhllg/image/upload/v1711790970/rnlyfqhelvjyfn87o6wp.jpg")
  comments  Comment[]
}

model Comment {
  id    Int   @id @default(autoincrement())
  text    String
  user    User  @relation(fields:[userId] , references:[id])
  userId    Int
  post    Post  @relation(fields:[postId] , references:[id])
  postId  Int

}

model Tag {
  id    Int     @id @default(autoincrement())
  content   String  @db.VarChar(255)
  posts    Post[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
  comments  Comment[]
}
